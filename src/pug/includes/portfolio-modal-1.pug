// Portfolio Modal 0
#portfolioModal1.portfolio-modal.modal.fade(tabindex='-1', aria-labelledby='portfolioModal1', aria-hidden='true')
    .modal-dialog.modal-xl
        .modal-content
            .modal-header.border-0
                button.btn-close(type='button', data-bs-dismiss='modal', aria-label='Close')
            .modal-body.text-center.pb-5
                .container
                    .row.justify-content-center
                        .col-lg-8
                            // Portfolio Modal - Title
                            h2.portfolio-modal-title.text-secondary.text-uppercase.mb-0 AB-TRAP
                            // Icon Divider
                            .divider-custom
                                .divider-custom-line
                                .divider-custom-icon
                                    i.fas.fa-star
                                .divider-custom-line
                            // Portfolio Modal - Image
                            img.img-fluid.rounded.mb-5(src='assets/img/projects/c2dc.png', alt='...')
                            // Portfolio Modal - Text
                            p.mb-4
                                | The increase of connected devices and the constantly evolving methods and techniques by attackers pose a challenge for network intrusion detection systems from conception to operation. As a result, we see a constant adoption of machine learning algorithms for network intrusion detection systems. However, the dataset used by these studies has become obsolete regarding both background and attack traffic. This work describes the AB-TRAP framework that enables the use of updated network traffic and considers operational concerns to enable the complete deployment of the solution. AB-TRAP is a five-step framework consisting of ( i ) the generation of the attack dataset, ( ii ) the bonafide dataset, ( iii ) training of machine learning models, ( iv ) realization (implementation) of the models, and ( v ) the performance evaluation of the realized model after deployment. We exercised the AB-TRAP for local (LAN) and global (internet) environments to detect TCP port scanning attacks. The LAN study case presented an f1-score of 0.96, and an area under the ROC curve of 0.99 using a decision tree with minimal CPU and RAM usage on kernel-space. For the internet case with eight machine learning algorithms with an average f1-score of 0.95, an average area under the ROC curve of 0.98, and an average overhead of 1.4% CPU and 3.6% RAM on user-space in a single-board computer. This framework has the following paramount characteristics: it is reproducible, uses the most up-to-date network traffic, attacks, and addresses the concerns to the modelâ€™s realization and deployment.
                            button.btn.btn-primary(href='#!', data-bs-dismiss='modal')
                                i.fas.fa-times.fa-fw
                                | Close Window
